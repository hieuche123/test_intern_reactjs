{"ast":null,"code":"var _jsxFileName = \"E:\\\\L\\xE0m tiktok\\\\google-places-api-demo-type\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleMap, OverlayView } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapOverlay = _ref => {\n  _s();\n  let {\n    image,\n    opacity,\n    position,\n    map\n  } = _ref;\n  const overlayRef = React.useRef(null);\n  const [imageDimensions, setImageDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const onLoad = () => {\n    const {\n      naturalWidth,\n      naturalHeight\n    } = image;\n    setImageDimensions({\n      width: naturalWidth,\n      height: naturalHeight\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(OverlayView, {\n    position: position,\n    mapPaneName: OverlayView.OVERLAY_LAYER,\n    getPixelPositionOffset: (width, height) => ({\n      x: -(width / 2),\n      y: -(height / 2)\n    }),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        opacity,\n        width: imageDimensions.width,\n        height: imageDimensions.height,\n        position: 'absolute',\n        top: 0,\n        left: 0\n      },\n      ref: overlayRef,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.src,\n        alt: \"Map Overlay\",\n        onLoad: onLoad,\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(MapOverlay, \"ker58vWe6zQqCiNz+f4qhMiyZEU=\");\n_c = MapOverlay;\nconst Map = () => {\n  _s2();\n  const [image, setImage] = useState(null);\n  const [opacity, setOpacity] = useState(0.5);\n  const [position, setPosition] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      setImage({\n        src: e.target.result,\n        file\n      });\n    };\n    reader.readAsDataURL(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"1\",\n      step: \"0.01\",\n      value: opacity,\n      onChange: event => setOpacity(parseFloat(event.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: {\n        width: '100%',\n        height: '400px'\n      },\n      center: position,\n      zoom: 8,\n      onClick: e => setPosition(e.latLng.toJSON()),\n      children: image && /*#__PURE__*/_jsxDEV(MapOverlay, {\n        image: image,\n        opacity: opacity,\n        position: position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s2(Map, \"jt7Yq49VYEh+pzKJ0OO+MZd03CM=\");\n_c2 = Map;\nexport default Map;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapOverlay\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"names":["React","useState","GoogleMap","OverlayView","MapOverlay","image","opacity","position","map","overlayRef","useRef","imageDimensions","setImageDimensions","width","height","onLoad","naturalWidth","naturalHeight","OVERLAY_LAYER","x","y","top","left","src","Map","setImage","setOpacity","setPosition","lat","lng","handleImageChange","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","parseFloat","value","latLng","toJSON"],"sources":["E:/LÃ m tiktok/google-places-api-demo-type/src/components/Map.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { GoogleMap, OverlayView } from '@react-google-maps/api';\r\n\r\nconst MapOverlay = ({ image, opacity, position, map }) => {\r\n  const overlayRef = React.useRef(null);\r\n  const [imageDimensions, setImageDimensions] = useState({ width: 0, height: 0 });\r\n\r\n  const onLoad = () => {\r\n    const { naturalWidth, naturalHeight } = image;\r\n    setImageDimensions({ width: naturalWidth, height: naturalHeight });\r\n  };\r\n\r\n  return (\r\n    <OverlayView\r\n      position={position}\r\n      mapPaneName={OverlayView.OVERLAY_LAYER}\r\n      getPixelPositionOffset={(width, height) => ({\r\n        x: -(width / 2),\r\n        y: -(height / 2),\r\n      })}\r\n    >\r\n      <div\r\n        style={{\r\n          opacity,\r\n          width: imageDimensions.width,\r\n          height: imageDimensions.height,\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n        }}\r\n        ref={overlayRef}\r\n      >\r\n        <img\r\n          src={image.src}\r\n          alt=\"Map Overlay\"\r\n          onLoad={onLoad}\r\n          style={{ width: '100%', height: '100%' }}\r\n        />\r\n      </div>\r\n    </OverlayView>\r\n  );\r\n};\r\n\r\nconst Map = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [opacity, setOpacity] = useState(0.5);\r\n  const [position, setPosition] = useState({ lat: 0, lng: 0 });\r\n\r\n  const handleImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      setImage({ src: e.target.result, file });\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n      <input\r\n        type=\"range\"\r\n        min=\"0\"\r\n        max=\"1\"\r\n        step=\"0.01\"\r\n        value={opacity}\r\n        onChange={(event) => setOpacity(parseFloat(event.target.value))}\r\n      />\r\n      <GoogleMap\r\n        mapContainerStyle={{ width: '100%', height: '400px' }}\r\n        center={position}\r\n        zoom={8}\r\n        onClick={(e) => setPosition(e.latLng.toJSON())}\r\n      >\r\n        {image && (\r\n          <MapOverlay\r\n            image={image}\r\n            opacity={opacity}\r\n            position={position}\r\n          />\r\n        )}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}