{"ast":null,"code":"var _jsxFileName = \"E:\\\\L\\xE0m tiktok\\\\google-places-api-demo-type\\\\src\\\\components\\\\Map.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents } from 'react-leaflet';\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\nimport 'leaflet/dist/leaflet.css';\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\nimport './Map.css'; // Custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [pdfScale, setPdfScale] = useState(1.0);\n  const [pdfOpacity, setPdfOpacity] = useState(1.0);\n  const [pdfPosition, setPdfPosition] = useState({\n    latitude: 0,\n    longitude: 0\n  });\n  const fileInputRef = useRef(null);\n\n  // Function to handle file upload\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      console.log('File uploaded:', file.name);\n      // Here you can process the uploaded file if needed\n    };\n\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Custom hook to get map instance\n  function MapEvents() {\n    _s();\n    const map = useMapEvents({\n      move: () => {\n        // Get map center coordinates\n        const center = map.getCenter();\n        setPdfPosition({\n          latitude: center.lat,\n          longitude: center.lng\n        });\n      },\n      zoom: () => {\n        // Get current zoom level\n        const zoom = map.getZoom();\n        console.log('Zoom level:', zoom);\n        // Here you can adjust PDF scale accordingly\n      }\n    });\n\n    return null;\n  }\n  _s(MapEvents, \"D2AvXN8Rt/r3DPix6IJfcPGmgF0=\", false, function () {\n    return [useMapEvents];\n  });\n  useEffect(() => {\n    // Load PDF and process it if needed\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        ref: fileInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"PDF Opacity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.1\",\n        value: pdfOpacity,\n        onChange: e => setPdfOpacity(parseFloat(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"PDF Scale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0.5\",\n        max: \"2\",\n        step: \"0.1\",\n        value: pdfScale,\n        onChange: e => setPdfScale(parseFloat(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"PDF Position:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), \"Latitude: \", pdfPosition.latitude.toFixed(6), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), \"Longitude: \", pdfPosition.longitude.toFixed(6)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [0, 0],\n      zoom: 2,\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapEvents, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-viewer\",\n      children: /*#__PURE__*/_jsxDEV(Document, {\n        file: \"path_to_your_pdf.pdf\" // Replace with your PDF file path\n        ,\n        onLoadSuccess: _ref => {\n          let {\n            numPages\n          } = _ref;\n          return setNumPages(numPages);\n        },\n        children: Array.from(new Array(numPages), (el, index) => /*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: index + 1,\n          scale: pdfScale\n        }, `page_${index + 1}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s2(Map, \"sRfUNEiEnUX1VZpROkbLdRpZoMQ=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MapContainer","TileLayer","Marker","Popup","useMapEvents","Document","Page","Map","numPages","setNumPages","pageNumber","setPageNumber","pdfScale","setPdfScale","pdfOpacity","setPdfOpacity","pdfPosition","setPdfPosition","latitude","longitude","fileInputRef","handleFileChange","event","file","target","files","reader","FileReader","onloadend","console","log","name","readAsDataURL","MapEvents","map","move","center","getCenter","lat","lng","zoom","getZoom","e","parseFloat","value","toFixed","height","width","Array","from","el","index"],"sources":["E:/LÃ m tiktok/google-places-api-demo-type/src/components/Map.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents } from 'react-leaflet';\r\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\nimport './Map.css'; // Custom styles\r\n\r\nfunction Map() {\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [pdfScale, setPdfScale] = useState(1.0);\r\n  const [pdfOpacity, setPdfOpacity] = useState(1.0);\r\n  const [pdfPosition, setPdfPosition] = useState({ latitude: 0, longitude: 0 });\r\n\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Function to handle file upload\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      console.log('File uploaded:', file.name);\r\n      // Here you can process the uploaded file if needed\r\n    };\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  // Custom hook to get map instance\r\n  function MapEvents() {\r\n    const map = useMapEvents({\r\n      move: () => {\r\n        // Get map center coordinates\r\n        const center = map.getCenter();\r\n        setPdfPosition({ latitude: center.lat, longitude: center.lng });\r\n      },\r\n      zoom: () => {\r\n        // Get current zoom level\r\n        const zoom = map.getZoom();\r\n        console.log('Zoom level:', zoom);\r\n        // Here you can adjust PDF scale accordingly\r\n      },\r\n    });\r\n    return null;\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Load PDF and process it if needed\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"sidebar\">\r\n        <input type=\"file\" onChange={handleFileChange} ref={fileInputRef} />\r\n        <br />\r\n        <label>PDF Opacity</label>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          step=\"0.1\"\r\n          value={pdfOpacity}\r\n          onChange={(e) => setPdfOpacity(parseFloat(e.target.value))}\r\n        />\r\n        <br />\r\n        <label>PDF Scale</label>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0.5\"\r\n          max=\"2\"\r\n          step=\"0.1\"\r\n          value={pdfScale}\r\n          onChange={(e) => setPdfScale(parseFloat(e.target.value))}\r\n        />\r\n        <br />\r\n        <div>\r\n          PDF Position:\r\n          <br />\r\n          Latitude: {pdfPosition.latitude.toFixed(6)}\r\n          <br />\r\n          Longitude: {pdfPosition.longitude.toFixed(6)}\r\n        </div>\r\n      </div>\r\n      <MapContainer center={[0, 0]} zoom={2} style={{ height: '100vh', width: '100%' }}>\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        <MapEvents />\r\n        {/* Add PDF overlay here */}\r\n        {/* You can add markers or other components on the map as needed */}\r\n      </MapContainer>\r\n      {/* Add PDF viewer component */}\r\n      <div className=\"pdf-viewer\">\r\n        <Document\r\n          file=\"path_to_your_pdf.pdf\" // Replace with your PDF file path\r\n          onLoadSuccess={({ numPages }) => setNumPages(numPages)}\r\n        >\r\n          {Array.from(new Array(numPages), (el, index) => (\r\n            <Page key={`page_${index + 1}`} pageNumber={index + 1} scale={pdfScale} />\r\n          ))}\r\n        </Document>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}