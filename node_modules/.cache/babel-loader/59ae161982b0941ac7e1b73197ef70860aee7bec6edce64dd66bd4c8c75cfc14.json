{"ast":null,"code":"var _jsxFileName = \"E:\\\\L\\xE0m tiktok\\\\google-places-api-demo-type\\\\src\\\\components\\\\UploadImage.js\",\n  _s = $RefreshSig$();\n// src/components/UploadImage.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImage = _ref => {\n  _s();\n  let {\n    setImageOverlay\n  } = _ref;\n  const [image, setImage] = useState(null);\n  const [imageSize, setImageSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const [topLeft, setTopLeft] = useState({\n    lat: 20.028511,\n    lng: 105.804817\n  });\n  const [bottomRight, setBottomRight] = useState({\n    lat: 20.018511,\n    lng: 105.814817\n  });\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const img = new Image();\n        img.src = reader.result;\n        img.onload = () => {\n          setImageSize({\n            width: img.width,\n            height: img.height\n          });\n          setImage(reader.result);\n        };\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSetOverlay = () => {\n    const aspectRatio = imageSize.width / imageSize.height;\n    const latDiff = topLeft.lat - bottomRight.lat;\n    const lngDiff = bottomRight.lng - topLeft.lng;\n    let adjustedLatDiff = latDiff;\n    let adjustedLngDiff = lngDiff;\n\n    // Ensure the aspect ratio of the bounds matches the image's aspect ratio\n    if (latDiff / lngDiff > aspectRatio) {\n      adjustedLngDiff = latDiff / aspectRatio;\n    } else {\n      adjustedLatDiff = lngDiff * aspectRatio;\n    }\n    setImageOverlay({\n      url: image,\n      bounds: {\n        north: topLeft.lat,\n        south: topLeft.lat - adjustedLatDiff,\n        east: topLeft.lng + adjustedLngDiff,\n        west: topLeft.lng\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Top Left Latitude: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: topLeft.lat,\n        onChange: e => setTopLeft({\n          ...topLeft,\n          lat: parseFloat(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Longitude: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: topLeft.lng,\n        onChange: e => setTopLeft({\n          ...topLeft,\n          lng: parseFloat(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Bottom Right Latitude: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: bottomRight.lat,\n        onChange: e => setBottomRight({\n          ...bottomRight,\n          lat: parseFloat(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Longitude: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: bottomRight.lng,\n        onChange: e => setBottomRight({\n          ...bottomRight,\n          lng: parseFloat(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSetOverlay,\n      children: \"Set Overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadImage, \"Z5WVdx5rXHvGf9SvPgVbRTOjWjI=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","UploadImage","setImageOverlay","image","setImage","imageSize","setImageSize","width","height","topLeft","setTopLeft","lat","lng","bottomRight","setBottomRight","handleImageUpload","event","file","target","files","reader","FileReader","onloadend","img","Image","src","result","onload","readAsDataURL","handleSetOverlay","aspectRatio","latDiff","lngDiff","adjustedLatDiff","adjustedLngDiff","url","bounds","north","south","east","west","e","parseFloat","value"],"sources":["E:/LÃ m tiktok/google-places-api-demo-type/src/components/UploadImage.js"],"sourcesContent":["// src/components/UploadImage.js\r\nimport React, { useState } from 'react';\r\n\r\nconst UploadImage = ({ setImageOverlay }) => {\r\n  const [image, setImage] = useState(null);\r\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\r\n  const [topLeft, setTopLeft] = useState({ lat: 20.028511, lng: 105.804817 });\r\n  const [bottomRight, setBottomRight] = useState({ lat: 20.018511, lng: 105.814817 });\r\n\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        const img = new Image();\r\n        img.src = reader.result;\r\n        img.onload = () => {\r\n          setImageSize({ width: img.width, height: img.height });\r\n          setImage(reader.result);\r\n        };\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSetOverlay = () => {\r\n    const aspectRatio = imageSize.width / imageSize.height;\r\n    const latDiff = topLeft.lat - bottomRight.lat;\r\n    const lngDiff = bottomRight.lng - topLeft.lng;\r\n\r\n    let adjustedLatDiff = latDiff;\r\n    let adjustedLngDiff = lngDiff;\r\n\r\n    // Ensure the aspect ratio of the bounds matches the image's aspect ratio\r\n    if (latDiff / lngDiff > aspectRatio) {\r\n      adjustedLngDiff = latDiff / aspectRatio;\r\n    } else {\r\n      adjustedLatDiff = lngDiff * aspectRatio;\r\n    }\r\n\r\n    setImageOverlay({\r\n      url: image,\r\n      bounds: {\r\n        north: topLeft.lat,\r\n        south: topLeft.lat - adjustedLatDiff,\r\n        east: topLeft.lng + adjustedLngDiff,\r\n        west: topLeft.lng\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\r\n      <div>\r\n        <label>Top Left Latitude: </label>\r\n        <input\r\n          type=\"number\"\r\n          value={topLeft.lat}\r\n          onChange={(e) => setTopLeft({ ...topLeft, lat: parseFloat(e.target.value) })}\r\n        />\r\n        <label>Longitude: </label>\r\n        <input\r\n          type=\"number\"\r\n          value={topLeft.lng}\r\n          onChange={(e) => setTopLeft({ ...topLeft, lng: parseFloat(e.target.value) })}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Bottom Right Latitude: </label>\r\n        <input\r\n          type=\"number\"\r\n          value={bottomRight.lat}\r\n          onChange={(e) => setBottomRight({ ...bottomRight, lat: parseFloat(e.target.value) })}\r\n        />\r\n        <label>Longitude: </label>\r\n        <input\r\n          type=\"number\"\r\n          value={bottomRight.lng}\r\n          onChange={(e) => setBottomRight({ ...bottomRight, lng: parseFloat(e.target.value) })}\r\n        />\r\n      </div>\r\n      <button onClick={handleSetOverlay}>Set Overlay</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadImage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}