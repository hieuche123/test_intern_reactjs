{"ast":null,"code":"var _jsxFileName = \"E:\\\\L\\xE0m tiktok\\\\google-places-api-demo-type\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { GoogleMap, OverlayView, useJsApiLoader } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [opacity, setOpacity] = useState(0.5);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 21.0285,\n    lng: 105.8542\n  }); // Tọa độ Hà Nội\n  const [mapZoom, setMapZoom] = useState(10);\n  const [overlaySize, setOverlaySize] = useState({\n    width: 0,\n    height: 0\n  });\n  const overlayRef = useRef(null);\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'AIzaSyA3bsDl1xddiU_w38hA-fsGea8kWsp5uJM'\n  });\n  useEffect(() => {\n    if (image) {\n      const img = new Image();\n      img.onload = () => {\n        setOverlaySize({\n          width: img.width,\n          height: img.height\n        });\n      };\n      img.src = image;\n    }\n  }, [image]);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      setImage(reader.result);\n    };\n    reader.readAsDataURL(file);\n  };\n  const handleOpacityChange = event => {\n    setOpacity(parseFloat(event.target.value));\n  };\n  const handleMapClick = event => {\n    setMapCenter({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    });\n  };\n  const getPixelPositionOffset = (width, height) => ({\n    x: -width / 2,\n    y: -height / 2\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100vh',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload,\n      accept: \"image/*\",\n      style: {\n        position: 'absolute',\n        top: '10px',\n        left: '10px',\n        zIndex: '1001'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"1\",\n      step: \"0.01\",\n      value: opacity,\n      onChange: handleOpacityChange,\n      style: {\n        position: 'absolute',\n        top: '10px',\n        left: '60px',\n        zIndex: '1001'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), isLoaded && /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: {\n        width: '100%',\n        height: '100%'\n      },\n      center: mapCenter,\n      zoom: mapZoom,\n      onClick: handleMapClick,\n      children: image && /*#__PURE__*/_jsxDEV(OverlayView, {\n        position: mapCenter,\n        mapPaneName: OverlayView.OVERLAY_LAYER,\n        getPixelPositionOffset: () => getPixelPositionOffset(overlaySize.width, overlaySize.height),\n        children: _ref => {\n          let {\n            position,\n            getPixelPositionOffset\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              width: overlaySize.width,\n              height: overlaySize.height,\n              top: 0,\n              left: 0,\n              opacity: opacity,\n              ...getPixelPositionOffset(overlaySize.width, overlaySize.height)\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: \"Map Overlay\",\n              style: {\n                width: '100%',\n                height: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"LmQmOQz0YAy2SSIGGgayaEU6si0=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GoogleMap","OverlayView","useJsApiLoader","MapComponent","image","setImage","opacity","setOpacity","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","overlaySize","setOverlaySize","width","height","overlayRef","isLoaded","id","googleMapsApiKey","img","Image","onload","src","handleFileUpload","event","file","target","files","reader","FileReader","result","readAsDataURL","handleOpacityChange","parseFloat","value","handleMapClick","latLng","getPixelPositionOffset","x","y","position","top","left","zIndex","OVERLAY_LAYER"],"sources":["E:/Làm tiktok/google-places-api-demo-type/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { GoogleMap, OverlayView, useJsApiLoader } from '@react-google-maps/api';\r\n\r\nconst MapComponent = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [opacity, setOpacity] = useState(0.5);\r\n  const [mapCenter, setMapCenter] = useState({ lat: 21.0285, lng: 105.8542 }); // Tọa độ Hà Nội\r\n  const [mapZoom, setMapZoom] = useState(10);\r\n  const [overlaySize, setOverlaySize] = useState({ width: 0, height: 0 });\r\n  const overlayRef = useRef(null);\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: 'AIzaSyA3bsDl1xddiU_w38hA-fsGea8kWsp5uJM',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        setOverlaySize({ width: img.width, height: img.height });\r\n      };\r\n      img.src = image;\r\n    }\r\n  }, [image]);\r\n\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      setImage(reader.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleOpacityChange = (event) => {\r\n    setOpacity(parseFloat(event.target.value));\r\n  };\r\n\r\n  const handleMapClick = (event) => {\r\n    setMapCenter({\r\n      lat: event.latLng.lat(),\r\n      lng: event.latLng.lng(),\r\n    });\r\n  };\r\n\r\n  const getPixelPositionOffset = (width, height) => ({\r\n    x: -width / 2,\r\n    y: -height / 2,\r\n  });\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '100vh', position: 'relative' }}>\r\n      <input type=\"file\" onChange={handleFileUpload} accept=\"image/*\" style={{ position: 'absolute', top: '10px', left: '10px', zIndex: '1001' }} />\r\n      <input\r\n        type=\"range\"\r\n        min=\"0\"\r\n        max=\"1\"\r\n        step=\"0.01\"\r\n        value={opacity}\r\n        onChange={handleOpacityChange}\r\n        style={{ position: 'absolute', top: '10px', left: '60px', zIndex: '1001' }}\r\n      />\r\n      {isLoaded && (\r\n        <GoogleMap\r\n          mapContainerStyle={{ width: '100%', height: '100%' }}\r\n          center={mapCenter}\r\n          zoom={mapZoom}\r\n          onClick={handleMapClick}\r\n        >\r\n          {image && (\r\n            <OverlayView\r\n              position={mapCenter}\r\n              mapPaneName={OverlayView.OVERLAY_LAYER}\r\n              getPixelPositionOffset={() => getPixelPositionOffset(overlaySize.width, overlaySize.height)}\r\n            >\r\n              {({ position, getPixelPositionOffset }) => (\r\n                <div\r\n                  style={{\r\n                    position: 'absolute',\r\n                    width: overlaySize.width,\r\n                    height: overlaySize.height,\r\n                    top: 0,\r\n                    left: 0,\r\n                    opacity: opacity,\r\n                    ...getPixelPositionOffset(overlaySize.width, overlaySize.height),\r\n                  }}\r\n                >\r\n                  <img src={image} alt=\"Map Overlay\" style={{ width: '100%', height: '100%' }} />\r\n                </div>\r\n              )}\r\n            </OverlayView>\r\n          )}\r\n        </GoogleMap>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}