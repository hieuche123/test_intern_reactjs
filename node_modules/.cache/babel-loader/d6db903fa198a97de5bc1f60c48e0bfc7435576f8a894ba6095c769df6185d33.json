{"ast":null,"code":"var _jsxFileName = \"E:\\\\L\\xE0m tiktok\\\\google-places-api-demo-type\\\\src\\\\components\\\\MapWithImageOverlay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { YOUR_API_KEY } from \"../constants/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapWithImageOverlay = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [mapData, setMapData] = useState({\n    center: {\n      lat: 10.853,\n      lng: 106.64\n    },\n    // Vị trí mặc định (Hà Nội)\n    zoom: 13,\n    markers: [],\n    overlayImage: null // Ảnh bản đồ\n  });\n\n  const mapRef = useRef(null);\n  const handleOverlayImageChange = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      setMapData(prevState => ({\n        ...prevState,\n        overlayImage: e.target.result\n      }));\n    };\n    reader.readAsDataURL(file);\n  };\n  useEffect(() => {\n    const loadMap = async () => {\n      try {\n        if (!window.google || !window.google.maps) {\n          const script = document.createElement('script');\n          script.src = `https://maps.googleapis.com/maps/api/js?key=${YOUR_API_KEY}&libraries=places`;\n          script.async = true;\n          document.body.appendChild(script);\n          await new Promise((resolve, reject) => {\n            script.onload = resolve;\n            script.onerror = reject;\n          });\n        }\n        const googleMap = new google.maps.Map(mapRef.current, {\n          center: mapData.center,\n          zoom: mapData.zoom\n        });\n        setMap(googleMap);\n      } catch (error) {\n        console.error('Error loading Google Maps API:', error);\n      }\n    };\n    loadMap();\n  }, []);\n\n  // ... rest of your component (useEffect, return)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleOverlayImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        width: '600px',\n        height: '400px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(MapWithImageOverlay, \"6xmPxUrV1M3NMuwoZxpRXiwN8qQ=\");\n_c = MapWithImageOverlay;\nexport default MapWithImageOverlay;\nvar _c;\n$RefreshReg$(_c, \"MapWithImageOverlay\");","map":{"version":3,"names":["React","useState","useEffect","useRef","YOUR_API_KEY","MapWithImageOverlay","map","setMap","mapData","setMapData","center","lat","lng","zoom","markers","overlayImage","mapRef","handleOverlayImageChange","event","file","target","files","reader","FileReader","onload","e","prevState","result","readAsDataURL","loadMap","window","google","maps","script","document","createElement","src","async","body","appendChild","Promise","resolve","reject","onerror","googleMap","Map","current","error","console","width","height"],"sources":["E:/Làm tiktok/google-places-api-demo-type/src/components/MapWithImageOverlay.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { YOUR_API_KEY } from \"../constants/constants\";\r\n\r\n\r\n\r\nconst MapWithImageOverlay = () => {\r\n  const [map, setMap] = useState(null);\r\n  const [mapData, setMapData] = useState({\r\n    center: { lat: 10.853, lng: 106.64 }, // Vị trí mặc định (Hà Nội)\r\n    zoom: 13,\r\n    markers: [],\r\n    overlayImage: null, // Ảnh bản đồ\r\n  });\r\n  const mapRef = useRef(null);\r\n\r\n  const handleOverlayImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      setMapData((prevState) => ({\r\n        ...prevState,\r\n        overlayImage: e.target.result,\r\n      }));\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadMap = async () => {\r\n      try {\r\n        if (!window.google || !window.google.maps) {\r\n          const script = document.createElement('script');\r\n          script.src = `https://maps.googleapis.com/maps/api/js?key=${YOUR_API_KEY}&libraries=places`;\r\n          script.async = true;\r\n          document.body.appendChild(script);\r\n\r\n          await new Promise((resolve, reject) => {\r\n            script.onload = resolve;\r\n            script.onerror = reject;\r\n          });\r\n        }\r\n\r\n        const googleMap = new google.maps.Map(mapRef.current, {\r\n          center: mapData.center,\r\n          zoom: mapData.zoom,\r\n        });\r\n        setMap(googleMap);\r\n      } catch (error) {\r\n        console.error('Error loading Google Maps API:', error);\r\n      }\r\n    };\r\n\r\n    loadMap();\r\n  }, []);\r\n\r\n  // ... rest of your component (useEffect, return)\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleOverlayImageChange} />\r\n      <div ref={mapRef} style={{ width: '600px', height: '400px' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapWithImageOverlay;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,YAAY,QAAQ,wBAAwB;AAAC;AAItD,MAAMC,mBAAmB,GAAG,MAAM;EAAA;EAChC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC;IACrCS,MAAM,EAAE;MAAEC,GAAG,EAAE,MAAM;MAAEC,GAAG,EAAE;IAAO,CAAC;IAAE;IACtCC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,IAAI,CAAE;EACtB,CAAC,CAAC;;EACF,MAAMC,MAAM,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE3B,MAAMc,wBAAwB,GAAIC,KAAK,IAAK;IAC1C,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MACrBhB,UAAU,CAAEiB,SAAS,KAAM;QACzB,GAAGA,SAAS;QACZX,YAAY,EAAEU,CAAC,CAACL,MAAM,CAACO;MACzB,CAAC,CAAC,CAAC;IACL,CAAC;IACDL,MAAM,CAACM,aAAa,CAACT,IAAI,CAAC;EAC5B,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,MAAM2B,OAAO,GAAG,YAAY;MAC1B,IAAI;QACF,IAAI,CAACC,MAAM,CAACC,MAAM,IAAI,CAACD,MAAM,CAACC,MAAM,CAACC,IAAI,EAAE;UACzC,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;UAC/CF,MAAM,CAACG,GAAG,GAAI,+CAA8ChC,YAAa,mBAAkB;UAC3F6B,MAAM,CAACI,KAAK,GAAG,IAAI;UACnBH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,MAAM,CAAC;UAEjC,MAAM,IAAIO,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;YACrCT,MAAM,CAACT,MAAM,GAAGiB,OAAO;YACvBR,MAAM,CAACU,OAAO,GAAGD,MAAM;UACzB,CAAC,CAAC;QACJ;QAEA,MAAME,SAAS,GAAG,IAAIb,MAAM,CAACC,IAAI,CAACa,GAAG,CAAC7B,MAAM,CAAC8B,OAAO,EAAE;UACpDpC,MAAM,EAAEF,OAAO,CAACE,MAAM;UACtBG,IAAI,EAAEL,OAAO,CAACK;QAChB,CAAC,CAAC;QACFN,MAAM,CAACqC,SAAS,CAAC;MACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDlB,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,oBACE;IAAA,wBACE;MAAO,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAEZ;IAAyB;MAAA;MAAA;MAAA;IAAA,QAAG,eACzD;MAAK,GAAG,EAAED,MAAO;MAAC,KAAK,EAAE;QAAEiC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5D;AAEV,CAAC;AAAC,GA1DI7C,mBAAmB;AAAA,KAAnBA,mBAAmB;AA4DzB,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}