{"ast":null,"code":"var _jsxFileName = \"E:\\\\L\\xE0m tiktok\\\\google-places-api-demo-type\\\\src\\\\components\\\\GoogleMapOverlay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport { GoogleMap, useLoadScript } from '@react-google-maps/api';\nimport anh from \"../assets/test.jpg\";\nimport { REACT_APP_GOOGLE_MAPS_KEY } from '../constants/constants';\nimport \"./GoogleMapOverlay.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh',\n  position: 'relative',\n  overflow: 'hidden'\n};\nconst center = {\n  lat: 21.1365,\n  lng: 105.8176\n};\nconst GoogleMapOverlay = () => {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: REACT_APP_GOOGLE_MAPS_KEY\n  });\n  const mapRef = useRef();\n  const imageRef = useRef();\n  const [mapCenter, setMapCenter] = useState(center);\n  const [imageCenter, setImageCenter] = useState({\n    x: 0,\n    y: 0\n  });\n  const onMapLoad = useCallback(map => {\n    mapRef.current = map;\n    const bounds = map.getBounds();\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n    const center = {\n      lat: (ne.lat() + sw.lat()) / 2,\n      lng: (ne.lng() + sw.lng()) / 2\n    };\n    setMapCenter(center);\n    updateImagePosition(center);\n  }, []);\n  const updateImagePosition = useCallback(mapCenter => {\n    const map = mapRef.current;\n    const image = imageRef.current;\n    if (map && image) {\n      const mapSize = map.getDiv().getBoundingClientRect();\n      const imageWidth = image.width;\n      const imageHeight = image.height;\n      const offsetX = (mapCenter.lng - center.lng) / (bounds.east - bounds.west) * mapSize.width;\n      const offsetY = (center.lat - mapCenter.lat) / (bounds.north - bounds.south) * mapSize.height;\n      setImageCenter({\n        x: imageWidth / 2 - offsetX,\n        y: imageHeight / 2 - offsetY\n      });\n    }\n  }, []);\n  const onMapMove = useCallback(() => {\n    const map = mapRef.current;\n    const center = map.getCenter();\n    setMapCenter({\n      lat: center.lat(),\n      lng: center.lng()\n    });\n    updateImagePosition({\n      lat: center.lat(),\n      lng: center.lng()\n    });\n  }, [updateImagePosition]);\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 25\n  }, this);\n  const mapOptions = {\n    disableDefaultUI: true,\n    gestureHandling: 'cooperative'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100vw',\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: mapCenter,\n      zoom: 13,\n      options: mapOptions,\n      onLoad: onMapLoad,\n      onBoundsChanged: onMapMove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imageRef,\n      src: anh,\n      alt: \"Overlay\",\n      style: {\n        position: 'absolute',\n        top: `calc(50% - ${imageCenter.y}px)`,\n        left: `calc(50% - ${imageCenter.x}px)`,\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleMapOverlay, \"WFrVGam5quKXyRUl7wWGr825AHs=\", false, function () {\n  return [useLoadScript];\n});\n_c = GoogleMapOverlay;\nexport default GoogleMapOverlay;\nvar _c;\n$RefreshReg$(_c, \"GoogleMapOverlay\");","map":{"version":3,"names":["React","useState","useRef","useCallback","GoogleMap","useLoadScript","anh","REACT_APP_GOOGLE_MAPS_KEY","mapContainerStyle","width","height","position","overflow","center","lat","lng","GoogleMapOverlay","isLoaded","loadError","googleMapsApiKey","mapRef","imageRef","mapCenter","setMapCenter","imageCenter","setImageCenter","x","y","onMapLoad","map","current","bounds","getBounds","ne","getNorthEast","sw","getSouthWest","updateImagePosition","image","mapSize","getDiv","getBoundingClientRect","imageWidth","imageHeight","offsetX","east","west","offsetY","north","south","onMapMove","getCenter","mapOptions","disableDefaultUI","gestureHandling","top","left","zIndex"],"sources":["E:/LÃ m tiktok/google-places-api-demo-type/src/components/GoogleMapOverlay.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport { GoogleMap, useLoadScript } from '@react-google-maps/api';\r\nimport anh from \"../assets/test.jpg\";\r\nimport { REACT_APP_GOOGLE_MAPS_KEY } from '../constants/constants';\r\nimport \"./GoogleMapOverlay.css\";\r\n\r\nconst mapContainerStyle = {\r\n  width: '100vw',\r\n  height: '100vh',\r\n  position: 'relative',\r\n  overflow: 'hidden',\r\n};\r\n\r\nconst center = {\r\n  lat: 21.1365,\r\n  lng: 105.8176,\r\n};\r\n\r\nconst GoogleMapOverlay = () => {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: REACT_APP_GOOGLE_MAPS_KEY,\r\n  });\r\n\r\n  const mapRef = useRef();\r\n  const imageRef = useRef();\r\n  const [mapCenter, setMapCenter] = useState(center);\r\n  const [imageCenter, setImageCenter] = useState({ x: 0, y: 0 });\r\n\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n    const bounds = map.getBounds();\r\n    const ne = bounds.getNorthEast();\r\n    const sw = bounds.getSouthWest();\r\n    const center = {\r\n      lat: (ne.lat() + sw.lat()) / 2,\r\n      lng: (ne.lng() + sw.lng()) / 2\r\n    };\r\n    setMapCenter(center);\r\n    updateImagePosition(center);\r\n  }, []);\r\n\r\n  const updateImagePosition = useCallback((mapCenter) => {\r\n    const map = mapRef.current;\r\n    const image = imageRef.current;\r\n    if (map && image) {\r\n      const mapSize = map.getDiv().getBoundingClientRect();\r\n      const imageWidth = image.width;\r\n      const imageHeight = image.height;\r\n      const offsetX = (mapCenter.lng - center.lng) / (bounds.east - bounds.west) * mapSize.width;\r\n      const offsetY = (center.lat - mapCenter.lat) / (bounds.north - bounds.south) * mapSize.height;\r\n      setImageCenter({ x: imageWidth / 2 - offsetX, y: imageHeight / 2 - offsetY });\r\n    }\r\n  }, []);\r\n\r\n  const onMapMove = useCallback(() => {\r\n    const map = mapRef.current;\r\n    const center = map.getCenter();\r\n    setMapCenter({ lat: center.lat(), lng: center.lng() });\r\n    updateImagePosition({ lat: center.lat(), lng: center.lng() });\r\n  }, [updateImagePosition]);\r\n\r\n  if (loadError) return <div>Error loading maps</div>;\r\n  if (!isLoaded) return <div>Loading Maps</div>;\r\n\r\n  const mapOptions = {\r\n    disableDefaultUI: true,\r\n    gestureHandling: 'cooperative',\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative', width: '100vw', height: '100vh', overflow: 'hidden' }}>\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        center={mapCenter}\r\n        zoom={13}\r\n        options={mapOptions}\r\n        onLoad={onMapLoad}\r\n        onBoundsChanged={onMapMove}\r\n      />\r\n      <img\r\n        ref={imageRef}\r\n        src={anh}\r\n        alt=\"Overlay\"\r\n        style={{\r\n          position: 'absolute',\r\n          top: `calc(50% - ${imageCenter.y}px)`,\r\n          left: `calc(50% - ${imageCenter.x}px)`,\r\n          zIndex: 1,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleMapOverlay;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}