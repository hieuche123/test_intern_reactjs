{"ast":null,"code":"var _jsxFileName = \"E:\\\\L\\xE0m tiktok\\\\google-places-api-demo-type\\\\src\\\\components\\\\GoogleMapOverlay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { GoogleMap, useLoadScript } from '@react-google-maps/api';\nimport anh from \"../assets/test.jpg\";\nimport { REACT_APP_GOOGLE_MAPS_KEY } from '../constants/constants';\nimport \"./GoogleMapOverlay.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh',\n  position: 'relative',\n  overflow: 'hidden'\n};\nconst center = {\n  lat: 21.1365,\n  lng: 105.8176\n};\nconst overlayImageStyle = (scale, opacity, imgCenter) => ({\n  width: `${100 * scale}%`,\n  height: `${100 * scale}%`,\n  opacity: opacity,\n  position: 'absolute',\n  top: `calc(50% - ${imgCenter.y}px)`,\n  // Căn chỉnh theo vị trí trung tâm mới của ảnh\n  left: `calc(50% - ${imgCenter.x}px)`,\n  // Căn chỉnh theo vị trí trung tâm mới của ảnh\n  transform: 'translate(-50%, -50%)',\n  zIndex: 1,\n  pointerEvents: 'none'\n});\nconst GoogleMapOverlay = () => {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: REACT_APP_GOOGLE_MAPS_KEY\n  });\n  const [opacity, setOpacity] = useState(0.5);\n  const [mapZoom, setMapZoom] = useState(13);\n  const [imageZoom, setImageZoom] = useState(1);\n  const [imgCenter, setImgCenter] = useState({\n    x: 0,\n    y: 0\n  }); // Lưu trữ vị trí trung tâm của ảnh\n  const mapRef = useRef();\n  const onMapLoad = useCallback(map => {\n    mapRef.current = map;\n    map.addListener('zoom_changed', () => {\n      setMapZoom(map.getZoom());\n      setImageZoom(prevZoom => Math.pow(2, map.getZoom() - 13)); // Tính tỷ lệ zoom của ảnh dựa trên zoom level của Google Map\n    });\n  }, []);\n  useEffect(() => {\n    const handleScroll = e => {\n      e.preventDefault();\n      if (e.deltaY < 0) {\n        setMapZoom(prevZoom => Math.min(prevZoom + 1, 21)); // Tăng zoom level của Google Map lên\n        setImageZoom(prevZoom => prevZoom * 2); // Tăng tỷ lệ zoom của ảnh lên gấp đôi\n      } else {\n        setMapZoom(prevZoom => Math.max(prevZoom - 1, 1)); // Giảm zoom level của Google Map xuống\n        setImageZoom(prevZoom => Math.max(prevZoom / 2, 1)); // Giảm tỷ lệ zoom của ảnh xuống một nửa, nhưng không nhỏ hơn 1\n      }\n    };\n\n    window.addEventListener('wheel', handleScroll, {\n      passive: false\n    });\n    return () => {\n      window.removeEventListener('wheel', handleScroll);\n    };\n  }, []);\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 25\n  }, this);\n  const mapOptions = {\n    disableDefaultUI: true,\n    gestureHandling: 'cooperative' // Đảm bảo việc cuộn không thay đổi vị trí bản đồ\n  };\n\n  const bounds = {\n    // Tạo bounds từ kích thước của khung hình màn hình\n    north: center.lat + 0.01,\n    south: center.lat - 0.01,\n    east: center.lng + 0.01,\n    west: center.lng - 0.01\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100vw',\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: center,\n      zoom: mapZoom,\n      options: mapOptions,\n      onLoad: onMapLoad,\n      onBoundsChanged: () => {\n        // Khi khung hình của bản đồ thay đổi\n        const map = mapRef.current;\n        if (map) {\n          const newBounds = map.getBounds(); // Lấy bounds mới\n          if (!newBounds.contains(center)) {\n            // Nếu trung tâm không nằm trong bounds mới\n            map.fitBounds(bounds); // Thu phóng bản đồ để vùng hiển thị chứa trung tâm\n          }\n        }\n\n        const centerPoint = map.getProjection().fromLatLngToPoint(center); // Lấy vị trí trung tâm dưới dạng pixel\n        setImgCenter({\n          // Cập nhật vị trí trung tâm của ảnh dựa trên vị trí trung tâm mới của bản đồ\n          x: centerPoint.x * Math.pow(2, mapZoom - 13),\n          y: centerPoint.y * Math.pow(2, mapZoom - 13)\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: anh,\n      alt: \"Overlay\",\n      style: overlayImageStyle(imageZoom, opacity, imgCenter) // Truyền vào vị trí trung tâm của ảnh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroll\",\n      style: {\n        position: 'absolute',\n        bottom: '90%',\n        left: '90%',\n        transform: 'translateX(-50%)',\n        backgroundColor: 'white',\n        padding: '10px',\n        borderRadius: '5px',\n        zIndex: 2,\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroll-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-scroll1\",\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: opacity,\n          onChange: e => setOpacity(parseFloat(e.target.value)),\n          style: {\n            marginRight: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"input-scroll2\",\n          children: `Opacity: ${opacity.toFixed(2)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleMapOverlay, \"XWSOKjWi43CDgIsrBl7uCggMLUc=\", false, function () {\n  return [useLoadScript];\n});\n_c = GoogleMapOverlay;\nexport default GoogleMapOverlay;\nvar _c;\n$RefreshReg$(_c, \"GoogleMapOverlay\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","GoogleMap","useLoadScript","anh","REACT_APP_GOOGLE_MAPS_KEY","mapContainerStyle","width","height","position","overflow","center","lat","lng","overlayImageStyle","scale","opacity","imgCenter","top","y","left","x","transform","zIndex","pointerEvents","GoogleMapOverlay","isLoaded","loadError","googleMapsApiKey","setOpacity","mapZoom","setMapZoom","imageZoom","setImageZoom","setImgCenter","mapRef","onMapLoad","map","current","addListener","getZoom","prevZoom","Math","pow","handleScroll","e","preventDefault","deltaY","min","max","window","addEventListener","passive","removeEventListener","mapOptions","disableDefaultUI","gestureHandling","bounds","north","south","east","west","newBounds","getBounds","contains","fitBounds","centerPoint","getProjection","fromLatLngToPoint","bottom","backgroundColor","padding","borderRadius","display","alignItems","parseFloat","target","value","marginRight","toFixed"],"sources":["E:/Làm tiktok/google-places-api-demo-type/src/components/GoogleMapOverlay.js"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\r\nimport { GoogleMap, useLoadScript } from '@react-google-maps/api';\r\nimport anh from \"../assets/test.jpg\";\r\nimport { REACT_APP_GOOGLE_MAPS_KEY } from '../constants/constants';\r\nimport \"./GoogleMapOverlay.css\";\r\n\r\nconst mapContainerStyle = {\r\n  width: '100vw',\r\n  height: '100vh',\r\n  position: 'relative',\r\n  overflow: 'hidden',\r\n};\r\n\r\nconst center = {\r\n  lat: 21.1365,\r\n  lng: 105.8176,\r\n};\r\n\r\nconst overlayImageStyle = (scale, opacity, imgCenter) => ({\r\n  width: `${100 * scale}%`,\r\n  height: `${100 * scale}%`,\r\n  opacity: opacity,\r\n  position: 'absolute',\r\n  top: `calc(50% - ${imgCenter.y}px)`, // Căn chỉnh theo vị trí trung tâm mới của ảnh\r\n  left: `calc(50% - ${imgCenter.x}px)`, // Căn chỉnh theo vị trí trung tâm mới của ảnh\r\n  transform: 'translate(-50%, -50%)',\r\n  zIndex: 1,\r\n  pointerEvents: 'none',\r\n});\r\n\r\nconst GoogleMapOverlay = () => {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: REACT_APP_GOOGLE_MAPS_KEY,\r\n  });\r\n\r\n  const [opacity, setOpacity] = useState(0.5);\r\n  const [mapZoom, setMapZoom] = useState(13);\r\n  const [imageZoom, setImageZoom] = useState(1);\r\n  const [imgCenter, setImgCenter] = useState({ x: 0, y: 0 }); // Lưu trữ vị trí trung tâm của ảnh\r\n  const mapRef = useRef();\r\n\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n    map.addListener('zoom_changed', () => {\r\n      setMapZoom(map.getZoom());\r\n      setImageZoom(prevZoom => Math.pow(2, map.getZoom() - 13)); // Tính tỷ lệ zoom của ảnh dựa trên zoom level của Google Map\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = (e) => {\r\n      e.preventDefault();\r\n      if (e.deltaY < 0) {\r\n        setMapZoom(prevZoom => Math.min(prevZoom + 1, 21)); // Tăng zoom level của Google Map lên\r\n        setImageZoom(prevZoom => prevZoom * 2); // Tăng tỷ lệ zoom của ảnh lên gấp đôi\r\n      } else {\r\n        setMapZoom(prevZoom => Math.max(prevZoom - 1, 1)); // Giảm zoom level của Google Map xuống\r\n        setImageZoom(prevZoom => Math.max(prevZoom / 2, 1)); // Giảm tỷ lệ zoom của ảnh xuống một nửa, nhưng không nhỏ hơn 1\r\n      }\r\n    };\r\n\r\n    window.addEventListener('wheel', handleScroll, { passive: false });\r\n    return () => {\r\n      window.removeEventListener('wheel', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  if (loadError) return <div>Error loading maps</div>;\r\n  if (!isLoaded) return <div>Loading Maps</div>;\r\n\r\n  const mapOptions = {\r\n    disableDefaultUI: true,\r\n    gestureHandling: 'cooperative', // Đảm bảo việc cuộn không thay đổi vị trí bản đồ\r\n  };\r\n\r\n  const bounds = { // Tạo bounds từ kích thước của khung hình màn hình\r\n    north: center.lat + 0.01,\r\n    south: center.lat - 0.01,\r\n    east: center.lng + 0.01,\r\n    west: center.lng - 0.01,\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative', width: '100vw', height: '100vh', overflow: 'hidden' }}>\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        center={center}\r\n        zoom={mapZoom}\r\n        options={mapOptions}\r\n        onLoad={onMapLoad}\r\n        onBoundsChanged={() => { // Khi khung hình của bản đồ thay đổi\r\n          const map = mapRef.current;\r\n          if (map) {\r\n            const newBounds = map.getBounds(); // Lấy bounds mới\r\n            if (!newBounds.contains(center)) { // Nếu trung tâm không nằm trong bounds mới\r\n              map.fitBounds(bounds); // Thu phóng bản đồ để vùng hiển thị chứa trung tâm\r\n            }\r\n          }\r\n          const centerPoint = map.getProjection().fromLatLngToPoint(center); // Lấy vị trí trung tâm dưới dạng pixel\r\n          setImgCenter({ // Cập nhật vị trí trung tâm của ảnh dựa trên vị trí trung tâm mới của bản đồ\r\n            x: centerPoint.x * Math.pow(2, mapZoom - 13),\r\n            y: centerPoint.y * Math.pow(2, mapZoom - 13),\r\n          });\r\n        }}\r\n      />\r\n      <img\r\n        src={anh}\r\n        alt=\"Overlay\"\r\n        style={overlayImageStyle(imageZoom, opacity, imgCenter)} // Truyền vào vị trí trung tâm của ảnh\r\n      />\r\n      <div className=\"scroll\" style={{\r\n        position: 'absolute',\r\n        bottom: '90%',\r\n        left: '90%',\r\n        transform: 'translateX(-50%)',\r\n        backgroundColor: 'white',\r\n        padding: '10px',\r\n        borderRadius: '5px',\r\n        zIndex: 2,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n      }}>\r\n        <div className=\"scroll-item\">\r\n          <input\r\n            className=\"input-scroll1\"\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.01\"\r\n            value={opacity}\r\n            onChange={(e) => setOpacity(parseFloat(e.target.value))}\r\n            style={{ marginRight: '10px' }}\r\n          />\r\n          <h5 className=\"input-scroll2\">{`Opacity: ${opacity.toFixed(2)}`}</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleMapOverlay;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}