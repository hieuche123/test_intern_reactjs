{"ast":null,"code":"var _jsxFileName = \"E:\\\\L\\xE0m tiktok\\\\google-places-api-demo-type\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { GoogleMap, OverlayView, useJsApiLoader, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [opacity, setOpacity] = useState(0.5);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 21.0285,\n    lng: 105.8542\n  }); // Tọa độ Hà Nội\n  const [mapZoom, setMapZoom] = useState(10);\n  const [imageSize, setImageSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const [imageCoords, setImageCoords] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const mapRef = useRef();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'AIzaSyA3bsDl1xddiU_w38hA-fsGea8kWsp5uJM'\n  });\n  useEffect(() => {\n    if (image) {\n      const img = new Image();\n      img.onload = () => {\n        setImageSize({\n          width: img.width,\n          height: img.height\n        });\n        // Tính toán vị trí ban đầu của hình ảnh\n        const imageInitialPosition = {\n          lat: mapCenter.lat,\n          lng: mapCenter.lng - img.width / 2 * (360 / Math.pow(2, mapZoom) * Math.cos(mapCenter.lat * Math.PI / 180))\n        };\n        setMapCenter(imageInitialPosition);\n      };\n      img.src = image;\n    }\n  }, [image, mapCenter, mapZoom]);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      setImage(reader.result);\n    };\n    reader.readAsDataURL(file);\n  };\n  const handleOpacityChange = event => {\n    setOpacity(parseFloat(event.target.value));\n  };\n  const handleMapDrag = () => {\n    const map = mapRef.current;\n    if (map) {\n      setMapCenter(map.getCenter().toJSON());\n    }\n  };\n  const handleMapZoom = () => {\n    const map = mapRef.current;\n    if (map) {\n      setMapZoom(map.getZoom());\n    }\n  };\n  const handleImageMouseMove = event => {\n    const map = mapRef.current;\n    if (map) {\n      const bounds = map.getBounds();\n      const ne = bounds.getNorthEast();\n      const sw = bounds.getSouthWest();\n      const lat = ne.lat() - (ne.lat() - sw.lat()) * (event.nativeEvent.offsetY / imageSize.height);\n      const lng = sw.lng() + (ne.lng() - sw.lng()) * (event.nativeEvent.offsetX / imageSize.width);\n      setImageCoords({\n        lat,\n        lng\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload,\n      accept: \"image/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"1\",\n      step: \"0.01\",\n      value: opacity,\n      onChange: handleOpacityChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), isLoaded && /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: {\n        width: '100%',\n        height: '100%'\n      },\n      center: mapCenter,\n      zoom: mapZoom,\n      onLoad: map => {\n        mapRef.current = map;\n        handleMapDrag();\n        handleMapZoom();\n      },\n      onDragEnd: handleMapDrag,\n      onZoomChanged: handleMapZoom,\n      children: [image && /*#__PURE__*/_jsxDEV(OverlayView, {\n        position: mapCenter,\n        mapPaneName: OverlayView.OVERLAY_LAYER,\n        children: _ref => {\n          let {\n            getPixelPositionOffset\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: getPixelPositionOffset({\n              x: -(imageSize.width / 2),\n              y: -(imageSize.height / 2)\n            }),\n            onMouseMove: handleImageMouseMove,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: \"Map Overlay\",\n              style: {\n                width: imageSize.width,\n                height: imageSize.height,\n                opacity\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: imageCoords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Image Size: \", imageSize.width, \" x \", imageSize.height]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Image Coordinates: \", imageCoords.lat, \", \", imageCoords.lng]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"30RYES1nUtbcnfoh+udBBjyyOT8=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useRef","useEffect","GoogleMap","OverlayView","useJsApiLoader","Marker","Map","image","setImage","opacity","setOpacity","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","imageSize","setImageSize","width","height","imageCoords","setImageCoords","mapRef","isLoaded","id","googleMapsApiKey","img","Image","onload","imageInitialPosition","Math","pow","cos","PI","src","handleFileUpload","event","file","target","files","reader","FileReader","result","readAsDataURL","handleOpacityChange","parseFloat","value","handleMapDrag","map","current","getCenter","toJSON","handleMapZoom","getZoom","handleImageMouseMove","bounds","getBounds","ne","getNorthEast","sw","getSouthWest","nativeEvent","offsetY","offsetX","OVERLAY_LAYER","getPixelPositionOffset","x","y"],"sources":["E:/Làm tiktok/google-places-api-demo-type/src/components/Map.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { GoogleMap, OverlayView, useJsApiLoader, Marker } from '@react-google-maps/api';\r\n\r\nconst Map = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [opacity, setOpacity] = useState(0.5);\r\n  const [mapCenter, setMapCenter] = useState({ lat: 21.0285, lng: 105.8542 }); // Tọa độ Hà Nội\r\n  const [mapZoom, setMapZoom] = useState(10);\r\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\r\n  const [imageCoords, setImageCoords] = useState({ lat: 0, lng: 0 });\r\n  const mapRef = useRef();\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: 'AIzaSyA3bsDl1xddiU_w38hA-fsGea8kWsp5uJM',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        setImageSize({ width: img.width, height: img.height });\r\n        // Tính toán vị trí ban đầu của hình ảnh\r\n        const imageInitialPosition = {\r\n          lat: mapCenter.lat,\r\n          lng: mapCenter.lng - (img.width / 2) * (360 / (Math.pow(2, mapZoom)) * Math.cos((mapCenter.lat * Math.PI) / 180)),\r\n        };\r\n        setMapCenter(imageInitialPosition);\r\n      };\r\n      img.src = image;\r\n    }\r\n  }, [image, mapCenter, mapZoom]);\r\n\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      setImage(reader.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleOpacityChange = (event) => {\r\n    setOpacity(parseFloat(event.target.value));\r\n  };\r\n\r\n  const handleMapDrag = () => {\r\n    const map = mapRef.current;\r\n    if (map) {\r\n      setMapCenter(map.getCenter().toJSON());\r\n    }\r\n  };\r\n\r\n  const handleMapZoom = () => {\r\n    const map = mapRef.current;\r\n    if (map) {\r\n      setMapZoom(map.getZoom());\r\n    }\r\n  };\r\n\r\n  const handleImageMouseMove = (event) => {\r\n    const map = mapRef.current;\r\n    if (map) {\r\n      const bounds = map.getBounds();\r\n      const ne = bounds.getNorthEast();\r\n      const sw = bounds.getSouthWest();\r\n      const lat = ne.lat() - ((ne.lat() - sw.lat()) * (event.nativeEvent.offsetY / imageSize.height));\r\n      const lng = sw.lng() + ((ne.lng() - sw.lng()) * (event.nativeEvent.offsetX / imageSize.width));\r\n      setImageCoords({ lat, lng });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '100vh' }}>\r\n      <input type=\"file\" onChange={handleFileUpload} accept=\"image/*\" />\r\n      <input\r\n        type=\"range\"\r\n        min=\"0\"\r\n        max=\"1\"\r\n        step=\"0.01\"\r\n        value={opacity}\r\n        onChange={handleOpacityChange}\r\n      />\r\n      {isLoaded && (\r\n        <GoogleMap\r\n          mapContainerStyle={{ width: '100%', height: '100%' }}\r\n          center={mapCenter}\r\n          zoom={mapZoom}\r\n          onLoad={(map) => {\r\n            mapRef.current = map;\r\n            handleMapDrag();\r\n            handleMapZoom();\r\n          }}\r\n          onDragEnd={handleMapDrag}\r\n          onZoomChanged={handleMapZoom}\r\n        >\r\n          {image && (\r\n            <OverlayView\r\n              position={mapCenter}\r\n              mapPaneName={OverlayView.OVERLAY_LAYER}\r\n            >\r\n              {({ getPixelPositionOffset }) => (\r\n                <div\r\n                  style={getPixelPositionOffset({ x: -(imageSize.width / 2), y: -(imageSize.height / 2) })}\r\n                  onMouseMove={handleImageMouseMove}\r\n                >\r\n                  <img\r\n                    src={image}\r\n                    alt=\"Map Overlay\"\r\n                    style={{ width: imageSize.width, height: imageSize.height, opacity }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </OverlayView>\r\n          )}\r\n          <Marker position={imageCoords} />\r\n        </GoogleMap>\r\n      )}\r\n      <div>\r\n        Image Size: {imageSize.width} x {imageSize.height}\r\n      </div>\r\n      <div>\r\n        Image Coordinates: {imageCoords.lat}, {imageCoords.lng}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}