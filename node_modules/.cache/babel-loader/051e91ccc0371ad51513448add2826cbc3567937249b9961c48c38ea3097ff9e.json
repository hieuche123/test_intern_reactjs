{"ast":null,"code":"var _jsxFileName = \"E:\\\\L\\xE0m tiktok\\\\google-places-api-demo-type\\\\src\\\\components\\\\GoogleMapOverlay.js\",\n  _s = $RefreshSig$();\nimport anh from \"../assets/test.jpg\";\nimport \"./GoogleMapOverlay.css\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport { GoogleMap, useLoadScript } from '@react-google-maps/api';\nimport { REACT_APP_GOOGLE_MAPS_KEY } from '../constants/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh'\n};\nconst center = {\n  lat: 21.1365,\n  lng: 105.8176\n};\nconst overlayImageStyle = (bounds, zoom, opacity) => {\n  if (!bounds) return {};\n  const ne = bounds.getNorthEast();\n  const sw = bounds.getSouthWest();\n  const width = Math.abs(ne.lng() - sw.lng()) * 10000 / zoom; // Adjust based on your map's dimensions\n  const height = Math.abs(ne.lat() - sw.lat()) * 10000 / zoom; // Adjust based on your map's dimensions\n\n  return {\n    width: `${width}vw`,\n    height: `${height}vh`,\n    opacity: opacity,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 1,\n    pointerEvents: 'none',\n    transform: `translate(-50%, -50%)` // Center the image\n  };\n};\n\nconst GoogleMapOverlay = () => {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: REACT_APP_GOOGLE_MAPS_KEY\n  });\n  const [opacity, setOpacity] = useState(0.5);\n  const [bounds, setBounds] = useState(null);\n  const [zoom, setZoom] = useState(13);\n  const mapRef = useRef();\n  const onMapLoad = useCallback(map => {\n    mapRef.current = map;\n    setBounds(map.getBounds());\n    map.addListener('bounds_changed', () => {\n      setBounds(map.getBounds());\n      setZoom(map.getZoom());\n    });\n  }, []);\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100vw',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: center,\n      zoom: zoom,\n      options: {\n        disableDefaultUI: true\n      },\n      onLoad: onMapLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: anh,\n      alt: \"Overlay\",\n      style: overlayImageStyle(bounds, zoom, opacity)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroll\",\n      style: {\n        position: 'absolute',\n        bottom: '10%',\n        left: '10%',\n        transform: 'translateX(-50%)',\n        backgroundColor: 'white',\n        padding: '10px',\n        borderRadius: '5px',\n        zIndex: 2,\n        // Ensure the slider is above the overlay\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroll-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-scroll1\",\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: opacity,\n          onChange: e => setOpacity(parseFloat(e.target.value)),\n          style: {\n            marginRight: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"input-scroll2\",\n          children: `Opacity: ${opacity.toFixed(2)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleMapOverlay, \"bREnf618qqoT2bULXHmk2CugdA8=\", false, function () {\n  return [useLoadScript];\n});\n_c = GoogleMapOverlay;\nexport default GoogleMapOverlay;\nvar _c;\n$RefreshReg$(_c, \"GoogleMapOverlay\");","map":{"version":3,"names":["anh","React","useState","useRef","useCallback","GoogleMap","useLoadScript","REACT_APP_GOOGLE_MAPS_KEY","mapContainerStyle","width","height","center","lat","lng","overlayImageStyle","bounds","zoom","opacity","ne","getNorthEast","sw","getSouthWest","Math","abs","position","top","left","zIndex","pointerEvents","transform","GoogleMapOverlay","isLoaded","loadError","googleMapsApiKey","setOpacity","setBounds","setZoom","mapRef","onMapLoad","map","current","getBounds","addListener","getZoom","disableDefaultUI","bottom","backgroundColor","padding","borderRadius","display","alignItems","e","parseFloat","target","value","marginRight","toFixed"],"sources":["E:/LÃ m tiktok/google-places-api-demo-type/src/components/GoogleMapOverlay.js"],"sourcesContent":["import anh from \"../assets/test.jpg\"\r\nimport \"./GoogleMapOverlay.css\"\r\nimport React, { useState, useRef, useCallback } from 'react';\r\nimport { GoogleMap, useLoadScript } from '@react-google-maps/api';\r\nimport { REACT_APP_GOOGLE_MAPS_KEY } from '../constants/constants';\r\n\r\nconst mapContainerStyle = {\r\n  width: '100vw',\r\n  height: '100vh',\r\n};\r\n\r\nconst center = {\r\n  lat: 21.1365, \r\n  lng: 105.8176, \r\n};\r\n\r\nconst overlayImageStyle = (bounds, zoom, opacity) => {\r\n  if (!bounds) return {};\r\n  const ne = bounds.getNorthEast();\r\n  const sw = bounds.getSouthWest();\r\n  const width = Math.abs(ne.lng() - sw.lng()) * 10000 / zoom; // Adjust based on your map's dimensions\r\n  const height = Math.abs(ne.lat() - sw.lat()) * 10000 / zoom; // Adjust based on your map's dimensions\r\n\r\n  return {\r\n    width: `${width}vw`,\r\n    height: `${height}vh`,\r\n    opacity: opacity,\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 1,\r\n    pointerEvents: 'none',\r\n    transform: `translate(-50%, -50%)`, // Center the image\r\n  };\r\n};\r\n\r\nconst GoogleMapOverlay = () => {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: REACT_APP_GOOGLE_MAPS_KEY,\r\n  });\r\n\r\n  const [opacity, setOpacity] = useState(0.5);\r\n  const [bounds, setBounds] = useState(null);\r\n  const [zoom, setZoom] = useState(13);\r\n  const mapRef = useRef();\r\n\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n    setBounds(map.getBounds());\r\n    map.addListener('bounds_changed', () => {\r\n      setBounds(map.getBounds());\r\n      setZoom(map.getZoom());\r\n    });\r\n  }, []);\r\n\r\n  if (loadError) return <div>Error loading maps</div>;\r\n  if (!isLoaded) return <div>Loading Maps</div>;\r\n\r\n  return (\r\n    <div style={{ position: 'relative', width: '100vw', height: '100vh' }}>\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        center={center}\r\n        zoom={zoom}\r\n        options={{ disableDefaultUI: true }}\r\n        onLoad={onMapLoad}\r\n      />\r\n      <img\r\n        src={anh}\r\n        alt=\"Overlay\"\r\n        style={overlayImageStyle(bounds, zoom, opacity)}\r\n      />\r\n      <div className=\"scroll\" style={{\r\n        position: 'absolute',\r\n        bottom: '10%',\r\n        left: '10%',\r\n        transform: 'translateX(-50%)',\r\n        backgroundColor: 'white',\r\n        padding: '10px',\r\n        borderRadius: '5px',\r\n        zIndex: 2, // Ensure the slider is above the overlay\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n      }}>\r\n        <div className=\"scroll-item\">\r\n          <input\r\n            className=\"input-scroll1\"\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.01\"\r\n            value={opacity}\r\n            onChange={(e) => setOpacity(parseFloat(e.target.value))}\r\n            style={{ marginRight: '10px' }}\r\n          />\r\n          <h5 className=\"input-scroll2\">{`Opacity: ${opacity.toFixed(2)}`}</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleMapOverlay;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}