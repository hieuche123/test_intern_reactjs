{"ast":null,"code":"var _jsxFileName = \"E:\\\\L\\xE0m tiktok\\\\google-places-api-demo-type\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MapContainer, TileLayer, ImageOverlay } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [pdfUrl, setPdfUrl] = useState(''); // URL của file PDF\n  const [pdfBounds, setPdfBounds] = useState(null); // Định vị của overlay trên bản đồ\n  const [pdfOpacity, setPdfOpacity] = useState(1); // Độ mờ của overlay PDF\n  const [pdfScale, setPdfScale] = useState(1); // Tỉ lệ thu phóng của overlay PDF\n\n  // Xử lý khi chọn file PDF từ input\n  const handlePdfChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const url = reader.result;\n        console.log('PDF URL:', url); // Kiểm tra URL trong console log\n        setPdfUrl(url);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Xử lý khi bản đồ được di chuyển để cập nhật vị trí của overlay PDF\n  const handleMapMove = event => {\n    const bounds = event.target.getBounds();\n    setPdfBounds([[bounds._southWest.lat, bounds._southWest.lng], [bounds._northEast.lat, bounds._northEast.lng]]);\n  };\n\n  // Xử lý khi thay đổi độ mờ của overlay PDF\n  const handlePdfOpacityChange = event => {\n    const newOpacity = parseFloat(event.target.value);\n    setPdfOpacity(newOpacity);\n  };\n\n  // Xử lý khi thay đổi tỉ lệ thu phóng của overlay PDF\n  const handlePdfScaleChange = event => {\n    const newScale = parseFloat(event.target.value);\n    setPdfScale(newScale);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handlePdfChange,\n      accept: \"application/pdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [51.505, -0.09],\n      zoom: 13,\n      style: {\n        height: '600px',\n        width: '100%'\n      },\n      onMoveend: handleMapMove,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), pdfUrl && pdfBounds && /*#__PURE__*/_jsxDEV(ImageOverlay, {\n        url: pdfUrl,\n        bounds: pdfBounds,\n        opacity: pdfOpacity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"toMidadtl8pYSTDk65RE6ijUgdI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","ImageOverlay","App","pdfUrl","setPdfUrl","pdfBounds","setPdfBounds","pdfOpacity","setPdfOpacity","pdfScale","setPdfScale","handlePdfChange","event","file","target","files","reader","FileReader","onloadend","url","result","console","log","readAsDataURL","handleMapMove","bounds","getBounds","_southWest","lat","lng","_northEast","handlePdfOpacityChange","newOpacity","parseFloat","value","handlePdfScaleChange","newScale","height","width"],"sources":["E:/Làm tiktok/google-places-api-demo-type/src/components/Map.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { MapContainer, TileLayer, ImageOverlay } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nconst App = () => {\r\n  const [pdfUrl, setPdfUrl] = useState(''); // URL của file PDF\r\n  const [pdfBounds, setPdfBounds] = useState(null); // Định vị của overlay trên bản đồ\r\n  const [pdfOpacity, setPdfOpacity] = useState(1); // Độ mờ của overlay PDF\r\n  const [pdfScale, setPdfScale] = useState(1); // Tỉ lệ thu phóng của overlay PDF\r\n\r\n  // Xử lý khi chọn file PDF từ input\r\n  const handlePdfChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        const url = reader.result;\r\n        console.log('PDF URL:', url); // Kiểm tra URL trong console log\r\n        setPdfUrl(url);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  // Xử lý khi bản đồ được di chuyển để cập nhật vị trí của overlay PDF\r\n  const handleMapMove = (event) => {\r\n    const bounds = event.target.getBounds();\r\n    setPdfBounds([\r\n      [bounds._southWest.lat, bounds._southWest.lng],\r\n      [bounds._northEast.lat, bounds._northEast.lng],\r\n    ]);\r\n  };\r\n\r\n  // Xử lý khi thay đổi độ mờ của overlay PDF\r\n  const handlePdfOpacityChange = (event) => {\r\n    const newOpacity = parseFloat(event.target.value);\r\n    setPdfOpacity(newOpacity);\r\n  };\r\n\r\n  // Xử lý khi thay đổi tỉ lệ thu phóng của overlay PDF\r\n  const handlePdfScaleChange = (event) => {\r\n    const newScale = parseFloat(event.target.value);\r\n    setPdfScale(newScale);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* Input để chọn file PDF */}\r\n      <input type=\"file\" onChange={handlePdfChange} accept=\"application/pdf\" />\r\n\r\n      {/* Bản đồ */}\r\n      <MapContainer\r\n        center={[51.505, -0.09]}\r\n        zoom={13}\r\n        style={{ height: '600px', width: '100%' }}\r\n        onMoveend={handleMapMove}\r\n      >\r\n        {/* TileLayer để hiển thị bản đồ */}\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n\r\n        {/* ImageOverlay để hiển thị PDF như một overlay trên bản đồ */}\r\n        {pdfUrl && pdfBounds && (\r\n          <ImageOverlay url={pdfUrl} bounds={pdfBounds} opacity={pdfOpacity} />\r\n        )}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}