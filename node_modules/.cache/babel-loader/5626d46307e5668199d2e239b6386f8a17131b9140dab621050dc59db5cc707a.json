{"ast":null,"code":"var _jsxFileName = \"E:\\\\L\\xE0m tiktok\\\\google-places-api-demo-type\\\\src\\\\components\\\\UploadImage.js\",\n  _s = $RefreshSig$();\n// src/components/UploadImage.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImage = _ref => {\n  _s();\n  let {\n    setImageOverlay\n  } = _ref;\n  const [image, setImage] = useState(null);\n  const [coordinates, setCoordinates] = useState({\n    lat: 21.1807985,\n    lng: 105.620778\n  });\n  const [imageSize, setImageSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const img = new Image();\n        img.src = reader.result;\n        img.onload = () => {\n          setImageSize({\n            width: img.width,\n            height: img.height\n          });\n          setImage(reader.result);\n        };\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSetOverlay = () => {\n    const aspectRatio = imageSize.width / imageSize.height;\n    const boundsHeight = 0.01; // Adjust this value to fit your needs\n    const boundsWidth = boundsHeight * aspectRatio;\n    setImageOverlay({\n      url: image,\n      bounds: {\n        north: coordinates.lat + boundsHeight / 2,\n        south: coordinates.lat - boundsHeight / 2,\n        east: coordinates.lng + boundsWidth / 2,\n        west: coordinates.lng - boundsWidth / 2\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSetOverlay,\n      children: \"Set Overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadImage, \"jcXU6o3Pn0Uk80+JbUZWWw+fwJ8=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","UploadImage","setImageOverlay","image","setImage","coordinates","setCoordinates","lat","lng","imageSize","setImageSize","width","height","handleImageUpload","event","file","target","files","reader","FileReader","onloadend","img","Image","src","result","onload","readAsDataURL","handleSetOverlay","aspectRatio","boundsHeight","boundsWidth","url","bounds","north","south","east","west"],"sources":["E:/LÃ m tiktok/google-places-api-demo-type/src/components/UploadImage.js"],"sourcesContent":["// src/components/UploadImage.js\r\nimport React, { useState } from 'react';\r\n\r\nconst UploadImage = ({ setImageOverlay }) => {\r\n  const [image, setImage] = useState(null);\r\n  const [coordinates, setCoordinates] = useState({ lat: 21.1807985,\r\n    lng: 105.620778 });\r\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\r\n\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        const img = new Image();\r\n        img.src = reader.result;\r\n        img.onload = () => {\r\n          setImageSize({ width: img.width, height: img.height });\r\n          setImage(reader.result);\r\n        };\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSetOverlay = () => {\r\n    const aspectRatio = imageSize.width / imageSize.height;\r\n    const boundsHeight = 0.01;  // Adjust this value to fit your needs\r\n    const boundsWidth = boundsHeight * aspectRatio;\r\n\r\n    setImageOverlay({\r\n      url: image,\r\n      bounds: {\r\n        north: coordinates.lat + boundsHeight / 2,\r\n        south: coordinates.lat - boundsHeight / 2,\r\n        east: coordinates.lng + boundsWidth / 2,\r\n        west: coordinates.lng - boundsWidth / 2\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\r\n      <button onClick={handleSetOverlay}>Set Overlay</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadImage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,WAAW,GAAG,QAAyB;EAAA;EAAA,IAAxB;IAAEC;EAAgB,CAAC;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC;IAAEO,GAAG,EAAE,UAAU;IAC9DC,GAAG,EAAE;EAAW,CAAC,CAAC;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC;IAAEW,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,CAAC;EAEnE,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACR,MAAMG,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACvB,MAAMC,GAAG,GAAG,IAAIC,KAAK,EAAE;QACvBD,GAAG,CAACE,GAAG,GAAGL,MAAM,CAACM,MAAM;QACvBH,GAAG,CAACI,MAAM,GAAG,MAAM;UACjBf,YAAY,CAAC;YAAEC,KAAK,EAAEU,GAAG,CAACV,KAAK;YAAEC,MAAM,EAAES,GAAG,CAACT;UAAO,CAAC,CAAC;UACtDR,QAAQ,CAACc,MAAM,CAACM,MAAM,CAAC;QACzB,CAAC;MACH,CAAC;MACDN,MAAM,CAACQ,aAAa,CAACX,IAAI,CAAC;IAC5B;EACF,CAAC;EAED,MAAMY,gBAAgB,GAAG,MAAM;IAC7B,MAAMC,WAAW,GAAGnB,SAAS,CAACE,KAAK,GAAGF,SAAS,CAACG,MAAM;IACtD,MAAMiB,YAAY,GAAG,IAAI,CAAC,CAAE;IAC5B,MAAMC,WAAW,GAAGD,YAAY,GAAGD,WAAW;IAE9C1B,eAAe,CAAC;MACd6B,GAAG,EAAE5B,KAAK;MACV6B,MAAM,EAAE;QACNC,KAAK,EAAE5B,WAAW,CAACE,GAAG,GAAGsB,YAAY,GAAG,CAAC;QACzCK,KAAK,EAAE7B,WAAW,CAACE,GAAG,GAAGsB,YAAY,GAAG,CAAC;QACzCM,IAAI,EAAE9B,WAAW,CAACG,GAAG,GAAGsB,WAAW,GAAG,CAAC;QACvCM,IAAI,EAAE/B,WAAW,CAACG,GAAG,GAAGsB,WAAW,GAAG;MACxC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAA,wBACE;MAAO,IAAI,EAAC,MAAM;MAAC,MAAM,EAAC,SAAS;MAAC,QAAQ,EAAEjB;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG,eACnE;MAAQ,OAAO,EAAEc,gBAAiB;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACnD;AAEV,CAAC;AAAA,GA5CK1B,WAAW;AAAA,KAAXA,WAAW;AA8CjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}